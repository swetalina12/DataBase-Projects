//############################################################################################################################
//Fine: Used to calculate fine
//calculates fine for the books which were returned late or for the books which are not yet returned and due date passed
//############################################################################################################################

package librarymanagementsystem;

import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import static librarymanagementsystem.ImportData.conn;


public class Fine extends javax.swing.JFrame {

 
    public Fine() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jcardNo = new javax.swing.JTextField();
        jupdateFine = new javax.swing.JButton();
        jsearchFine = new javax.swing.JButton();
        jpreviousFine = new javax.swing.JButton();
        jpayFine = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        op_table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        jLabel2.setText("CALCULATE FINE");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarymanagementsystem/pictures/Fine.jpg"))); // NOI18N

        jLabel3.setText("CARD NUMBER");

        jcardNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcardNoActionPerformed(evt);
            }
        });

        jupdateFine.setText("UPDATE FINE");
        jupdateFine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jupdateFineActionPerformed(evt);
            }
        });

        jsearchFine.setText("SHOW TOTAL FINE");
        jsearchFine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsearchFineActionPerformed(evt);
            }
        });

        jpreviousFine.setText("FINE PAID ");
        jpreviousFine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpreviousFineActionPerformed(evt);
            }
        });

        jpayFine.setText("SHOW EACH FINE");
        jpayFine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpayFineActionPerformed(evt);
            }
        });

        op_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "LOAN ID", "BOOK ID", "FINE AMOUNT"
            }
        ));
        jScrollPane3.setViewportView(op_table);

        jButton1.setText("PAY FINE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jupdateFine)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(206, 206, 206))
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(59, 59, 59)
                        .addComponent(jcardNo, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jpreviousFine)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jpayFine)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jsearchFine)
                        .addGap(31, 31, 31))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(55, 55, 55))))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jupdateFine))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jcardNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jsearchFine)
                            .addComponent(jpreviousFine)
                            .addComponent(jpayFine)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(8, 8, 8))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcardNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcardNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcardNoActionPerformed

    private void jupdateFineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jupdateFineActionPerformed
          try{
         conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root", "");
         Statement stmt = conn.createStatement();
         stmt.execute("use library;");
       
      
      ArrayList<String> loanid = new ArrayList<String>();
      ArrayList<Integer> difference = new ArrayList<Integer>();

        ResultSet rs=stmt.executeQuery("SELECT LOAN_ID,DUE_DATE,DATEDIFF(CURDATE(),DUE_DATE)AS DIFFERENCE"
                 + " FROM BOOK_LOANS WHERE DATE_IN='NULL' AND due_date < CURDATE();");
         
          while (rs.next()){
             loanid.add(rs.getString("Loan_id"));
              String dueDate=rs.getString("Due_Date");
              difference.add(rs.getInt("DIFFERENCE"));   
          }
          
           rs=stmt.executeQuery("SELECT LOAN_ID,DUE_DATE,DATEDIFF(DATE_IN,DUE_DATE)AS DIFFERENCE"
                 + " FROM BOOK_LOANS WHERE DATE_IN<>'NULL' AND due_date <DATE_IN ;");
            while (rs.next()){
             loanid.add(rs.getString("Loan_id"));
              String dueDate=rs.getString("Due_Date");
              difference.add(rs.getInt("DIFFERENCE"));   
          }
          
             for (int i=0;i<loanid.size();i++){
              ResultSet rs1=stmt.executeQuery("Select count(*) as cnt from fines where Loan_id='"+loanid.get(i)+"';");
              rs1.next();
              int cnt =rs1.getInt("cnt");
              float fine =(float)difference.get(i)*0.25f;
              if (cnt==0)
              {
                  stmt.executeUpdate("Insert into fines values ('"+loanid.get(i)+"','"+fine+"',0);");
              }
              else
              {
                  stmt.executeUpdate("UPDATE fines SET  Loan_id  = '"+loanid.get(i)+"', Fine_amount = '"+fine+"',Paid =0;");
              }
             
             }
          JOptionPane.showMessageDialog(null, "Fines table is updated");
         
         }
          catch(SQLException ex){
        System.out.println("Error in connection: " + ex.getMessage());}
    }//GEN-LAST:event_jupdateFineActionPerformed

    private void jsearchFineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsearchFineActionPerformed
       try{
         conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root", "");
         Statement stmt = conn.createStatement();
         stmt.execute("use library;");
         String cardno=jcardNo.getText();
        //ResultSet check;
          if(jcardNo.getText().equals(""))
             JOptionPane.showMessageDialog(null, "Please enter card number");
          
          else{
        ResultSet rs2=  stmt.executeQuery("Select b.loan_id,sum(fine_amount) as fine_total from fines natural join "
                + "book_loans as b where b.Loan_id=loan_id and card_no='"+cardno+"' and paid=0;");  
        if(rs2.next())
        { 
            String loanid=rs2.getString("b.loan_id");
            float fine=rs2.getFloat("fine_total");
        
             JOptionPane.showMessageDialog(null, "Total fine on your card is : "+fine+"");
    
        }
        else{JOptionPane.showMessageDialog(null, "No fine on your card");}
       }
       }
       
        catch(SQLException ex){
        System.out.println("Error in connection: " + ex.getMessage());}
    }//GEN-LAST:event_jsearchFineActionPerformed

    private void jpreviousFineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpreviousFineActionPerformed
        try{
         conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root", "");
         Statement stmt = conn.createStatement();
         stmt.execute("use library;");
         String cardno=jcardNo.getText();
           if(jcardNo.getText().equals(""))
             JOptionPane.showMessageDialog(null, "Please enter card number");
           else{
        ResultSet rs3=  stmt.executeQuery("Select b.loan_id,sum(fine_amount) as fine_total "
                + "from fines natural join book_loans as b where b.Loan_id=loan_id and card_no='"+cardno+"' and paid=1;");  
        if(rs3.next())
        {
              float fine=rs3.getFloat("fine_total");
             JOptionPane.showMessageDialog(null,"Paid fine in past: "+fine+"" );
        }
        
        }}
          catch(SQLException ex){
        System.out.println("Error in connection: " + ex.getMessage());}
    }//GEN-LAST:event_jpreviousFineActionPerformed

    private void jpayFineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpayFineActionPerformed
        try{
         conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root", "");
         Statement stmt = conn.createStatement();
         stmt.execute("use library;");
         String cardno=jcardNo.getText();
        //ResultSet check;
          if(jcardNo.getText().equals(""))
             JOptionPane.showMessageDialog(null, "Please enter card number");
          
          else{
          ResultSet rs= stmt.executeQuery("SELECT Loan_id, Fine_amount,Book_id  from fines"
                  + " natural join BOOK_LOANS where fines.Loan_id=BOOK_LOANS.loan_id and Card_no='"+cardno+"' and paid=0;");
          
                for(int k=0;k<i;k++){
                op_table.setValueAt("", k, 0);
                op_table.setValueAt("", k, 1);
                op_table.setValueAt("", k, 2);
              }
             i=0;
             while (rs.next())
             {
                 int tableloanId=rs.getInt("Loan_id");
                 String tablebookId=rs.getString("Book_id");
                 float tablefineamt=rs.getFloat("Fine_amount");
                    
                 
                op_table.setValueAt(tableloanId, i, 0);
                op_table.setValueAt(tablebookId, i, 1);
                op_table.setValueAt(tablefineamt, i, 2);
                i++;     
             }   
         if(i==0)
         JOptionPane.showMessageDialog(null, "No fine on your card");  
          
          } 
 }
         catch(SQLException ex){
        System.out.println("Error in connection: " + ex.getMessage());}
        
    }//GEN-LAST:event_jpayFineActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     try{
         conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root", "");
         Statement stmt = conn.createStatement();
         stmt.execute("use library;");
         int row=op_table.getSelectedRow();
         int loanid = (int)op_table.getValueAt(row,0);
         check=stmt.executeQuery("Select count(*) as cnt from book_loans where loan_id='"+loanid+"' and  Date_in='NULL'");
         check.next();
         int cnt =check.getInt("cnt");
         if(cnt==0)
                {
                    stmt.executeUpdate("UPDATE fines SET Paid =1 where loan_id='"+loanid+"'; ");
                     JOptionPane.showMessageDialog(null, "Fine is paid"); 
                }
         else{
              JOptionPane.showMessageDialog(null, "Please checkin book before paying fine");
            
         }
         
         
     }
      catch(SQLException ex){
        System.out.println("Error in connection: " + ex.getMessage());}   
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
 this.setVisible(false);
        WelcomePage wp= new WelcomePage();
         wp.setVisible(true);      
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jcardNo;
    private javax.swing.JButton jpayFine;
    private javax.swing.JButton jpreviousFine;
    private javax.swing.JButton jsearchFine;
    private javax.swing.JButton jupdateFine;
    private javax.swing.JTable op_table;
    // End of variables declaration//GEN-END:variables
  ResultSet check; 
  int i;
}
