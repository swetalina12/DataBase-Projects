//############################################################################################################################
//BookCheckoutPage: Used to check out a book
//checkouts are only possible if a copy of book is available in our branch from where we doing the checkout
//############################################################################################################################

package librarymanagementsystem;

import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import static librarymanagementsystem.ImportData.conn;

/**
 *
 * @author swetalina
 */
public class BookCheckoutPage extends javax.swing.JFrame {

    /**
     * Creates new form BookCheckoutPage
     */
    public BookCheckoutPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jT_CardNymber = new javax.swing.JTextField();
        jT_BookID = new javax.swing.JTextField();
        jT_BranchNumber = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/librarymanagementsystem/pictures/Checkout.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        jLabel2.setText("ENTER DETAILS TO CHECK OUT BOOK:");

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel3.setText("* CARD NUMBER :");

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel4.setText("* BOOK ID :");

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel5.setText("* BRANCH NUMBER :");

        jT_BookID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jT_BookIDActionPerformed(evt);
            }
        });

        jButton1.setText("CHECK OUT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setText("* REQUIRED");

        jBack.setText("BACK");
        jBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(jT_BranchNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jT_BookID, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jT_CardNymber, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(36, 36, 36))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jT_CardNymber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jT_BookID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jT_BranchNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jBack))
                .addGap(40, 40, 40)
                .addComponent(jLabel6)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jT_BookIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jT_BookIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jT_BookIDActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       try{
         conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root", "");
         Statement stmt = conn.createStatement();
         stmt.execute("use library;");
           String tcardNo=jT_CardNymber.getText();
             String tbookID=jT_BookID.getText();
             String tbranchNo=jT_BranchNumber.getText(); 
             flag=false;
               ResultSet fineTrue=stmt.executeQuery("select count(*) as cnt from book_loans natural join fines "
                     + "where book_loans.Loan_id=fines.Loan_id and paid=0 and Card_no='"+tcardNo+"'");
               fineTrue.next();
               int count=fineTrue.getInt("cnt");
               
         if(jT_CardNymber.getText().equals("")|| jT_BookID.getText().equals("")|| jT_BranchNumber.getText().equals(""))
             JOptionPane.showMessageDialog(null, "Entering all values is mandotary");
         
         else if (count>0)
             {
                 JOptionPane.showMessageDialog(null, "Please pay fines before checking out books");
             }
         
         else{
             ResultSet card=stmt.executeQuery("Select * from Borrower where card_no='"+tcardNo+"';");
             if(card.next()){
             ResultSet book=stmt.executeQuery("Select * from book where book_id='"+tbookID+"';");  
             if(book.next()){
             ResultSet branchid=stmt.executeQuery("Select * from LIBRARY_BRANCH where branch_id='"+tbranchNo+"';");  
             if(branchid.next()){ 
             ResultSet cn=stmt.executeQuery("Select count(*) from BOOK_LOANS where card_no='"+tcardNo+"';");
             cn.next();
             int borrowed=cn.getInt(1);
             if (borrowed==3)
             { 
                 flag=true;
                 JOptionPane.showMessageDialog(null, "You already have 3 books issued on your card");
                return;
             }
             
             ResultSet avl=stmt.executeQuery("select No_of_copies,count(bl.book_id) as cnt from BOOK_COPIES as bc "
                     + "Natural Join BOOK_LOANS as bl where bl.book_id='"+tbookID+"' and bl.BRANCH_ID ='"+tbranchNo+"' AND  Date_in='NULL' ;");
             avl.next();
             int avlCopy=avl.getInt("No_of_copies")-avl.getInt("cnt");
             if (avlCopy==0)
             {
                 flag=true;
                 JOptionPane.showMessageDialog(null, "No Copies Available for book requested");
                return;
             }
            
             ResultSet pk=stmt.executeQuery("SELECT MAX(Loan_id) FROM BOOK_LOANS;");
             pk.next();
             int loan_id=(pk.getInt(1))+1;
             DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
	    Date date = new Date();
            String dateout=dateFormat.format(date);
	   // System.out.println("check_out_date:"+dateout);
            String datein="NULL";
           
            Calendar cal = Calendar.getInstance();
            cal.add(Calendar.DATE, 14);
           // System.out.println("Due Date:"+dateFormat.format(cal.getTime()));
            String duedate=dateFormat.format(cal.getTime());
             if(flag==false)
             {
                stmt.executeUpdate("insert into book_loans(loan_id,book_id,branch_id,card_no,date_out,due_date,date_in)values"
                         + "('"+loan_id+"','"+tbookID+"','"+tbranchNo+"','"+tcardNo+"',"
                         + "'"+dateout+"','"+duedate+"','"+datein+"');");
                 
                 JOptionPane.showMessageDialog(null, "Book Checkout Successful!!");
             }  
         }
            else { JOptionPane.showMessageDialog(null, "Invalid branchid");} 
            }
            
             else { JOptionPane.showMessageDialog(null, "Invalid bookid");}
            }
            else { JOptionPane.showMessageDialog(null, "Invalid card");}
         }
          
       }
         catch(SQLException ex){
        System.out.println("Error in connection: " + ex.getMessage());}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBackActionPerformed
        this.setVisible(false);
        WelcomePage wp= new WelcomePage();
         wp.setVisible(true);
        
    }//GEN-LAST:event_jBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookCheckoutPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookCheckoutPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookCheckoutPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookCheckoutPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookCheckoutPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBack;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jT_BookID;
    private javax.swing.JTextField jT_BranchNumber;
    private javax.swing.JTextField jT_CardNymber;
    // End of variables declaration//GEN-END:variables

Boolean flag=false;}
